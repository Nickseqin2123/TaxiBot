from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from Keyboards.keyboards import menu, geo_keyb, only_go_menu, get_inline_keyb
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from SqlReq.SqlRequests import database
from UserOperation.get_km import ge


router = Router(name=__name__)


class GetInfo(StatesGroup):
    locationA = State()
    locationB = State()


@router.message(F.text == '–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏', F.func(lambda x: bool(database.get_user_phone(
    x.from_user.id
))))
async def taxi_get(message: Message, state: FSMContext):
    await state.set_state(GetInfo.locationA)
    
    await message.answer(
        text="""–ò—Ç–∞–∫, –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ –∑–∞–∫–∞–∑—É, –¥–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏–≤ 
—Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø–æ –∫–Ω–æ–ø–∫–µ 'üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å'""",
reply_markup=await geo_keyb()
    )
    

@router.message(F.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def go_home(message: Message, state: FSMContext):
    current_state = await state.get_state()
    
    if current_state is None:
        return
    
    await state.clear()
    await message.answer(
        text="–ú—ã –≤ –º–µ–Ω—é",
        reply_markup=await menu()
    )


@router.message(GetInfo.locationA, F.location)
async def get_loca(message: Message, state: FSMContext):
    await state.update_data(locationa=message.location)
    
    await state.set_state(GetInfo.locationB)
    
    await message.answer(
        text="–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø—É–Ω–∫—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è", 
        reply_markup=await only_go_menu()
    )


@router.message(GetInfo.locationB, F.location)
async def get_locb(message: Message, state: FSMContext):
    await state.update_data(locationb=message.location)
    
    
    data = await state.get_data()
    
    await state.clear()
    await summary(message, data)


async def summary(message: Message, data: dict):
    pointA = data['locationa']
    pointB = data['locationb']
    
    await message.answer(
        text="–ò–¥–µ—Ç —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–π–º–æ—Å—Ç–∏"
    )
    
    resp = await ge(pointA, pointB)

    
    await message.answer(
        text=f"{resp}", reply_markup=await get_inline_keyb()
    )
